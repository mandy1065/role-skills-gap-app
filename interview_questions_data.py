"""
Data module containing behavioural and technical interview questions for
multiple roles.  Each role has 50 behavioural questions (common) and 50
technical questions tailored to its domain.  The behavioural questions
encourage candidates to use the STAR method.  Technical questions draw
from industry best practices and learning resources.
"""

# Behavioural questions shared by all roles.  Answers guide the user to
# structure responses using the STAR (Situation, Task, Action, Result)
# technique.  There are 50 questions covering a wide range of soft skills.
behavioral_questions = [
    {"question": "Tell me about a time you faced a challenge at work.", "answer": "Situation – Describe the context of the challenge. Task – Explain what goal you needed to accomplish. Action – Outline the steps you took to meet the challenge. Result – Share what you achieved and what you learned from the experience."},
    {"question": "Describe a situation where you had to collaborate with a difficult colleague.", "answer": "Situation – Provide the background of the collaboration. Task – Explain what you were trying to accomplish. Action – Detail how you navigated the relationship and resolved conflicts. Result – Summarise the positive outcome and any lessons learned."},
    {"question": "Give an example of a project you led and the result.", "answer": "Situation – Set the stage for the project. Task – Describe your objectives. Action – Highlight the steps you took and how you collaborated with the team. Result – Quantify your impact and discuss how the project succeeded."},
    {"question": "Tell me about a mistake you made and how you handled it.", "answer": "Situation – Explain the circumstances and what went wrong. Task – Describe your responsibility in the situation. Action – Discuss the steps you took to correct the mistake. Result – Share the outcome and how you prevented similar issues in the future."},
    {"question": "Describe a situation where you had to meet a tight deadline.", "answer": "Situation – Provide context and why the deadline was challenging. Task – Explain your objective. Action – Outline how you prioritised tasks and managed your time. Result – Describe the outcome and any lessons learned."},
    {"question": "Tell me about a time you had to learn a new skill quickly.", "answer": "Situation – Describe why the new skill was needed. Task – State what you were expected to achieve. Action – Explain how you approached learning the skill and applied it. Result – Share the outcome and what you gained from the experience."},
    {"question": "Describe a situation where you took initiative to solve a problem.", "answer": "Situation – Explain the problem and its context. Task – Describe your goal in addressing it. Action – Outline the steps you proactively took. Result – Summarise the impact of your actions and any recognition received."},
    {"question": "Tell me about a time you received constructive feedback.", "answer": "Situation – Share the context in which you received feedback. Task – Explain what you were working on. Action – Describe how you processed the feedback and adjusted your approach. Result – Highlight the improvement and what you learned."},
    {"question": "Describe a situation where you had to make a difficult decision.", "answer": "Situation – Provide the context and factors involved. Task – Explain your role and objectives. Action – Discuss how you weighed options and consulted others. Result – Share the outcome and what you learned from the process."},
    {"question": "Tell me about a time you failed to achieve a goal and what you learned.", "answer": "Situation – Set the scene and the goal. Task – Describe your responsibilities. Action – Explain what you did and why it didn’t lead to success. Result – Summarise the lessons learned and how you applied them afterwards."},
    {"question": "Describe a situation where you had to adapt to change.", "answer": "Situation – Describe the change and why it happened. Task – Explain what was expected of you. Action – Outline how you adjusted your plan or behaviour. Result – Share the outcome and the skills you developed."},
    {"question": "Tell me about a time you managed conflicting priorities.", "answer": "Situation – Provide context on the competing tasks. Task – Explain your goals. Action – Discuss how you prioritised, delegated and negotiated. Result – Share the impact on the project and any feedback received."},
    {"question": "Describe a situation where you resolved a conflict within a team.", "answer": "Situation – Explain the nature of the conflict. Task – Describe your role in addressing it. Action – Outline the steps you took to facilitate communication and compromise. Result – Summarise the resolution and the team’s outcome."},
    {"question": "Tell me about a time you convinced others to adopt your idea.", "answer": "Situation – Set the context for your idea. Task – Explain why you needed others to support it. Action – Describe how you presented your case and addressed concerns. Result – Highlight the result and how your idea benefited the project."},
    {"question": "Describe a situation where you worked under pressure.", "answer": "Situation – Illustrate the high-pressure environment. Task – Explain your responsibilities. Action – Discuss how you stayed focused, prioritised tasks and maintained quality. Result – Share the outcome and what you learned about working under pressure."},
    {"question": "Tell me about a time you demonstrated leadership without formal authority.", "answer": "Situation – Describe the scenario where leadership was needed. Task – Explain what you aimed to achieve. Action – Outline how you motivated others and guided the team. Result – Summarise the outcome and any recognition of your efforts."},
    {"question": "Describe a situation where you improved a process.", "answer": "Situation – Identify the process and its inefficiencies. Task – Explain your objective to improve it. Action – Discuss the changes you implemented. Result – Quantify the improvement and describe the impact on the team."},
    {"question": "Tell me about a time you exceeded expectations.", "answer": "Situation – Provide context on the task or project. Task – State the expectations set for you. Action – Explain what you did beyond the minimum requirements. Result – Share the recognition you received and the outcome for the organisation."},
    {"question": "Describe a situation where you delivered exceptional customer service.", "answer": "Situation – Describe the customer issue. Task – Explain what the customer needed. Action – Outline the steps you took to address the issue. Result – Share the customer’s feedback and any long-term benefits."},
    {"question": "Tell me about a time you multitasked effectively.", "answer": "Situation – Provide context for the multiple tasks. Task – Explain your objectives for each task. Action – Discuss how you organised your time and resources. Result – Share the outcome and how you ensured quality across tasks."},
    {"question": "Describe a situation where you had to make a trade-off.", "answer": "Situation – Explain the competing options. Task – Describe what you needed to achieve. Action – Discuss how you evaluated the pros and cons. Result – Share the decision you made and its impact."},
    {"question": "Tell me about a time you used data to make a decision.", "answer": "Situation – Describe the problem requiring a decision. Task – Explain what information you needed. Action – Discuss the data you gathered and analysed. Result – Share how your data-driven decision improved outcomes."},
    {"question": "Describe a situation where you mentored or coached someone.", "answer": "Situation – Provide context on the person’s needs. Task – Explain what you aimed to help them achieve. Action – Outline how you provided guidance and feedback. Result – Summarise their progress and what you learned as a mentor."},
    {"question": "Tell me about a time you had to change course based on new information.", "answer": "Situation – Describe the initial plan. Task – Explain the goal. Action – Discuss the new information you received and how you adapted. Result – Share the outcome and what you learned about flexibility."},
    {"question": "Describe a situation where you went above and beyond.", "answer": "Situation – Set the scene and expectations. Task – Explain the deliverables. Action – Detail the extra steps you took to add value. Result – Share the impact on the project and any recognition."},
    {"question": "Tell me about a time you prioritised tasks effectively.", "answer": "Situation – Describe the workload and deadlines. Task – Explain your objectives. Action – Discuss the tools or methods you used to prioritise. Result – Share how this improved efficiency and outcomes."},
    {"question": "Describe a situation where you introduced innovation.", "answer": "Situation – Identify the existing process or product. Task – Explain your goal to innovate. Action – Outline the creative solution you proposed and implemented. Result – Summarise the benefits and any challenges overcome."},
    {"question": "Tell me about a time you collaborated across departments.", "answer": "Situation – Provide context on the cross-functional project. Task – Describe what you were trying to achieve together. Action – Discuss how you communicated and coordinated with different teams. Result – Share the outcome and the value of cross-functional collaboration."},
    {"question": "Describe a situation where you had to deliver bad news.", "answer": "Situation – Explain the nature of the bad news. Task – Describe your responsibility in communicating it. Action – Discuss how you prepared, delivered the message and managed reactions. Result – Share how you maintained trust and moved forward."},
    {"question": "Tell me about a time you overcame a significant obstacle.", "answer": "Situation – Set the context and describe the obstacle. Task – Explain your goal. Action – Discuss the steps you took to overcome the obstacle. Result – Summarise the outcome and what you learned about resilience."},
    {"question": "Describe a situation where you supported team morale.", "answer": "Situation – Explain why morale was low. Task – Describe your role on the team. Action – Outline the steps you took to motivate and engage the team. Result – Share the impact on morale and performance."},
    {"question": "Tell me about a time you resolved a customer complaint.", "answer": "Situation – Describe the complaint and its context. Task – Explain what the customer wanted. Action – Discuss how you listened, empathised and addressed the issue. Result – Summarise how the complaint was resolved and the customer’s response."},
    {"question": "Describe a situation where you delegated tasks effectively.", "answer": "Situation – Provide context on the project. Task – Explain what needed to be accomplished. Action – Discuss how you assessed team strengths and delegated accordingly. Result – Share how delegation improved efficiency and outcomes."},
    {"question": "Tell me about a time you used creativity to solve a problem.", "answer": "Situation – Set the scene and describe the problem. Task – Explain what you wanted to achieve. Action – Outline the creative idea you proposed and implemented. Result – Summarise the impact and any recognition for innovation."},
    {"question": "Describe a situation where you managed a budget or resources.", "answer": "Situation – Explain the project or task requiring resource management. Task – Describe your goals. Action – Discuss how you allocated resources efficiently and monitored spending. Result – Share the outcome and any cost savings achieved."},
    {"question": "Tell me about a time you worked on a project outside your comfort zone.", "answer": "Situation – Describe the unfamiliar project. Task – Explain your objectives. Action – Discuss how you approached learning new concepts and sought support. Result – Share the outcome and how you grew professionally."},
    {"question": "Describe a situation where you adapted your communication style.", "answer": "Situation – Provide context on your audience. Task – Explain what you needed to communicate. Action – Discuss how you tailored your message for different stakeholders. Result – Share the outcome and feedback you received."},
    {"question": "Tell me about a time you identified and mitigated a risk.", "answer": "Situation – Describe the potential risk and its context. Task – Explain your responsibility. Action – Outline the steps you took to analyse and mitigate the risk. Result – Summarise how your actions prevented issues and what you learned."},
    {"question": "Describe a situation where you corrected a mistake effectively.", "answer": "Situation – Explain the mistake and why it happened. Task – Describe your role in addressing it. Action – Discuss how you investigated, took ownership and implemented a fix. Result – Share the outcome and lessons learned."},
    {"question": "Tell me about a time you delivered an important presentation.", "answer": "Situation – Provide context for the presentation. Task – Explain your goal and audience. Action – Discuss how you prepared content and engaged listeners. Result – Summarise the feedback you received and impact of the presentation."},
    {"question": "Describe a situation where you collaborated on a cross-functional project.", "answer": "Situation – Explain the nature of the cross-functional collaboration. Task – Describe the project’s objectives. Action – Discuss how you coordinated across teams and managed competing priorities. Result – Share the outcome and what you learned about cross-functional work."},
    {"question": "Tell me about a time you handled an ethical dilemma.", "answer": "Situation – Describe the ethical issue and its context. Task – Explain your responsibilities. Action – Discuss how you evaluated the situation, sought guidance and acted ethically. Result – Summarise the outcome and what you learned about integrity."},
    {"question": "Describe a situation where you improved team efficiency.", "answer": "Situation – Explain the inefficiencies you observed. Task – Describe your goal to improve efficiency. Action – Outline the process improvements or tools you introduced. Result – Share the measurable improvements and feedback from the team."},
    {"question": "Tell me about a time you met an ambiguous goal.", "answer": "Situation – Describe the ambiguous goal and context. Task – Explain what was expected of you. Action – Discuss how you sought clarity, set your own targets and adjusted as needed. Result – Share the outcome and any recognition for initiative."},
    {"question": "Describe a situation where you solved a problem using critical thinking.", "answer": "Situation – Explain the complex problem. Task – Describe your objectives. Action – Discuss how you broke down the problem, analysed data and developed a logical solution. Result – Summarise the outcome and what you learned."},
    {"question": "Tell me about a time you proactively sought feedback.", "answer": "Situation – Provide context on why you sought feedback. Task – Explain what you were working on. Action – Discuss how you requested feedback from peers or supervisors and integrated it. Result – Share how this improved your performance."},
    {"question": "Describe a situation where you supported diversity and inclusion.", "answer": "Situation – Describe the context where diversity was important. Task – Explain your role in promoting inclusion. Action – Outline the steps you took to ensure diverse perspectives were heard. Result – Summarise the impact on team culture and outcomes."},
    {"question": "Tell me about a time you balanced multiple stakeholders.", "answer": "Situation – Explain the stakeholders involved and their needs. Task – Describe your objective. Action – Discuss how you communicated, negotiated and prioritised to balance interests. Result – Share the outcome and lessons learned."},
    {"question": "Describe a situation where you handled confidential information.", "answer": "Situation – Provide context on the sensitive information. Task – Explain your responsibility. Action – Discuss how you safeguarded the data and followed policies. Result – Summarise the outcome and how you maintained trust."},
    {"question": "Tell me about a time you turned a failure into a learning opportunity.", "answer": "Situation – Describe the failure and its impact. Task – Explain your role. Action – Discuss how you reflected on the failure, identified lessons and applied them. Result – Share how this improved future outcomes."}
]

# Technical questions per role.  Each list contains exactly 50 Q&A entries.
technical_questions = {
    "QA Analyst": [
        {"question": "What is manual testing and how does it differ from automated testing?", "answer": "Manual testing involves a human tester executing test cases without the aid of scripts. It allows exploratory and usability testing but can be time-consuming. Automated testing uses scripts and tools to execute tests quickly and consistently, making regression and performance testing more efficient."},
        {"question": "Explain the difference between smoke testing and sanity testing.", "answer": "Smoke testing checks basic functionalities of a build to confirm it is stable for further testing. Sanity testing verifies that recent changes or fixes work as intended without checking the entire application."},
        {"question": "Define verification and validation in software testing.", "answer": "Verification ensures the product is built correctly by checking specifications and design documents. Validation ensures the right product is built by testing the final software against user requirements."},
        {"question": "What is regression testing?", "answer": "Regression testing retests existing functionality after changes (e.g., bug fixes, enhancements) to ensure that previously working features still behave correctly."},
        {"question": "What is retesting and how is it different from regression testing?", "answer": "Retesting involves testing a specific defect once it has been fixed to verify the fix. Regression testing checks the unchanged areas of the application to ensure new changes haven't introduced defects."},
        {"question": "Differentiate between a test case and a test scenario.", "answer": "A test scenario describes a high-level action or feature to be tested, while a test case includes detailed steps, inputs and expected results to validate a specific requirement."},
        {"question": "What is a test plan?", "answer": "A test plan outlines the scope, approach, resources, schedule and deliverables for testing activities. It guides the test team and stakeholders on how testing will be conducted."},
        {"question": "Explain the defect life cycle.", "answer": "The defect life cycle tracks a bug from identification to closure. States typically include new, assigned, open, fixed, retested, verified and closed, with possible statuses like rejected or deferred."},
        {"question": "What is a test environment?", "answer": "A test environment is the hardware and software setup on which tests are executed. It includes servers, databases, network configurations and tools configured to mimic production conditions."},
        {"question": "Differentiate between defect severity and priority.", "answer": "Severity indicates the impact of a defect on the system (critical, major, minor), while priority reflects the urgency to fix the defect based on business needs. A high-severity defect might not be high priority if it affects a rarely used feature."},
        {"question": "What are alpha testing and beta testing?", "answer": "Alpha testing is performed by internal teams at the developer’s site to find bugs before release. Beta testing is carried out by actual users in a real environment to gather feedback and uncover issues not found during alpha testing."},
        {"question": "Explain the difference between functional and non-functional testing.", "answer": "Functional testing verifies that software features work according to requirements. Non-functional testing assesses attributes like performance, security, usability and reliability."},
        {"question": "What is black box testing?", "answer": "Black box testing evaluates the system from an external perspective without knowledge of its internal code. Testers focus on inputs and expected outputs to validate functionality."},
        {"question": "What is white box testing?", "answer": "White box testing involves testing internal structures or code. Testers examine logic, paths and conditions to ensure internal operations perform as intended."},
        {"question": "What is user acceptance testing (UAT)?", "answer": "UAT is performed by end users to ensure the system meets business requirements. It typically occurs before the software goes live."},
        {"question": "Differentiate between SDLC and STLC.", "answer": "The Software Development Life Cycle (SDLC) covers the entire process of software creation, from planning to deployment. The Software Testing Life Cycle (STLC) focuses specifically on test planning, design, execution and closure."},
        {"question": "What is ad-hoc testing?", "answer": "Ad-hoc testing is an informal, unstructured approach where testers explore the application without predefined test cases to uncover defects through intuition and experience."},
        {"question": "What is exploratory testing?", "answer": "Exploratory testing combines learning, test design and execution simultaneously. Testers creatively explore the application to discover issues not covered by scripted tests."},
        {"question": "What is acceptance testing?", "answer": "Acceptance testing determines whether the system meets business requirements and is ready for delivery. It often includes UAT and contractual acceptance testing."},
        {"question": "Differentiate between defect, error and bug.", "answer": "An error is a human mistake in code or requirement; a defect (or bug) is a flaw in software that causes incorrect results; a failure is the manifestation of a defect during execution."},
        {"question": "What is boundary value analysis?", "answer": "Boundary value analysis is a black box technique that tests values at the edges of input ranges (minimum, maximum, just inside/outside) because defects often occur at boundaries."},
        {"question": "Explain equivalence partitioning.", "answer": "Equivalence partitioning divides input data into valid and invalid partitions. Test cases are designed to cover one representative from each partition, reducing the number of test cases while maintaining coverage."},
        {"question": "What is test coverage?", "answer": "Test coverage measures the extent to which code or requirements are exercised by tests. High coverage increases confidence but doesn’t guarantee defect-free software."},
        {"question": "What is risk-based testing?", "answer": "Risk-based testing prioritises tests based on the likelihood and impact of failure. High-risk areas receive more thorough testing."},
        {"question": "What is performance testing?", "answer": "Performance testing evaluates how a system behaves under expected workload. It measures responsiveness, stability and resource usage."},
        {"question": "Define load testing.", "answer": "Load testing assesses system performance under normal and peak load conditions to identify capacity limits and bottlenecks."},
        {"question": "What is stress testing?", "answer": "Stress testing pushes the system beyond normal limits to determine how it behaves under extreme conditions and whether it fails gracefully."},
        {"question": "What is usability testing?", "answer": "Usability testing evaluates how easily users can learn and use the application. It helps identify usability issues and improve user experience."},
        {"question": "What is compatibility testing?", "answer": "Compatibility testing checks how the application performs across different hardware, operating systems, browsers and devices."},
        {"question": "What is installation testing?", "answer": "Installation testing verifies that the software installs, updates and uninstalls correctly on supported platforms without corrupting the system."},
        {"question": "Explain configuration management.", "answer": "Configuration management controls and documents changes to software, hardware and settings to ensure consistency across environments."},
        {"question": "What are test automation frameworks?", "answer": "Test automation frameworks provide structure and best practices for writing maintainable automated tests. Examples include data-driven, keyword-driven and behaviour-driven frameworks."},
        {"question": "What are continuous integration (CI) and continuous testing?", "answer": "CI is a development practice where code changes are frequently integrated and automatically built. Continuous testing runs automated tests as part of the CI pipeline to detect issues early."},
        {"question": "Differentiate between a test strategy and a test plan.", "answer": "A test strategy outlines the high-level approach to testing across projects, including methods and tools. A test plan is project-specific, detailing scope, schedule and responsibilities."},
        {"question": "What is static testing?", "answer": "Static testing involves evaluating code or documents without executing the program. Examples include reviews, walkthroughs and inspections."},
        {"question": "What is dynamic testing?", "answer": "Dynamic testing involves executing the software to validate its behaviour. Functional and non-functional tests fall under dynamic testing."},
        {"question": "What are test metrics?", "answer": "Test metrics are quantitative measures used to assess test progress, quality and effectiveness, such as defect density, test case execution rate and pass/fail percentages."},
        {"question": "What is a use case in testing?", "answer": "A use case describes a sequence of interactions between an actor and the system to achieve a goal. Use cases help derive test scenarios from end-user perspectives."},
        {"question": "Explain the purpose of code reviews.", "answer": "Code reviews involve peers examining code to find defects, ensure adherence to standards and share knowledge. They improve quality before the code reaches testing."},
        {"question": "What is root cause analysis?", "answer": "Root cause analysis identifies the underlying reasons for defects or failures. By addressing the root cause rather than symptoms, future defects can be prevented."},
        {"question": "What is defect leakage?", "answer": "Defect leakage occurs when bugs escape to a later stage or production despite previous testing. Tracking leakage helps improve testing effectiveness."},
        {"question": "What is a traceability matrix?", "answer": "A requirements traceability matrix maps requirements to test cases to ensure coverage. It helps track test progress and assess the impact of changes."},
        {"question": "What is test data management?", "answer": "Test data management involves creating, maintaining and provisioning data sets used in testing. Good data management ensures test repeatability and compliance."},
        {"question": "Explain pairwise testing.", "answer": "Pairwise testing is a combinatorial technique that tests all possible pairs of input parameters to reduce test cases while providing broad coverage."},
        {"question": "What is system testing?", "answer": "System testing validates the complete and integrated application against its requirements. It ensures that the entire system works as expected."},
        {"question": "What is integration testing?", "answer": "Integration testing checks the interfaces and interactions between integrated modules to uncover issues like incorrect data exchange or control flow."},
        {"question": "Define acceptance criteria in testing.", "answer": "Acceptance criteria are conditions that a system must satisfy to be accepted by stakeholders. They guide UAT and ensure the delivered product meets expectations."},
        {"question": "What is cross-browser testing?", "answer": "Cross-browser testing verifies that web applications work consistently across different browsers and versions."},
        {"question": "What is mobile testing?", "answer": "Mobile testing evaluates applications on mobile devices for functionality, usability, performance and compatibility across platforms and screen sizes."},
        {"question": "What is A/B testing?", "answer": "A/B testing compares two versions of a feature or design to determine which performs better based on user interaction or conversion metrics."}
    ],
    "QA Automation Engineer": [
        {"question": "What is test automation and why is it important?", "answer": "Test automation uses scripts and tools to execute tests automatically. It improves efficiency, repeatability and coverage, especially for regression and performance tests."},
        {"question": "Explain the role of Selenium in automation.", "answer": "Selenium is an open-source suite for automating web browsers. It provides APIs in multiple languages, supports various browsers and integrates with frameworks for robust test automation."},
        {"question": "What are the components of Selenium WebDriver architecture?", "answer": "WebDriver consists of language bindings, a JSON wire protocol, browser drivers and the browser. Tests send commands through the driver to control the browser."},
        {"question": "Differentiate between implicit and explicit waits in Selenium.", "answer": "Implicit waits set a default polling time for locating elements. Explicit waits wait for a specific condition before proceeding, offering more precise control."},
        {"question": "What is a Page Object Model (POM)?", "answer": "POM is a design pattern where each page of an application is represented by a class containing locators and methods. It improves maintainability and reusability of test code."},
        {"question": "Explain data-driven testing.", "answer": "Data-driven testing uses external data sources (e.g., CSV, Excel, databases) to drive test inputs. It allows the same test logic to run with multiple data sets."},
        {"question": "What is a keyword-driven framework?", "answer": "Keyword-driven frameworks use keywords representing actions (click, input, verify) defined in external files. Tests are built by combining keywords with data, enabling non-programmers to write tests."},
        {"question": "How do you handle dynamic web elements in Selenium?", "answer": "Dynamic elements may change attributes. Strategies include using relative XPaths, CSS selectors, waits and pattern matching to locate elements reliably."},
        {"question": "What is headless browser testing?", "answer": "Headless browser testing runs tests without a graphical user interface, using drivers like Chrome Headless. It speeds up execution and is useful in CI pipelines."},
        {"question": "Explain the difference between findElement and findElements.", "answer": "findElement returns the first matching element or throws an exception if none is found. findElements returns a list of all matching elements and returns an empty list when none are found."},
        {"question": "What are some common exceptions in Selenium?", "answer": "Common exceptions include NoSuchElementException, TimeoutException, StaleElementReferenceException and ElementNotInteractableException."},
        {"question": "How can you handle file uploads in Selenium?", "answer": "You can send the file path to an input element of type file or use external tools (e.g., AutoIt) for native dialogs when direct interaction isn’t possible."},
        {"question": "What is TestNG and how does it support automation?", "answer": "TestNG is a testing framework for Java that supports parallel execution, annotations, grouping and reporting. It integrates well with Selenium for managing test suites."},
        {"question": "Explain the concept of continuous integration (CI) in automation.", "answer": "CI integrates code changes frequently and runs automated builds and tests to detect issues early. Automation scripts are executed as part of the CI pipeline."},
        {"question": "What is continuous delivery (CD)?", "answer": "Continuous delivery extends CI by automatically preparing code changes for release. Automated tests ensure the software is always in a deployable state."},
        {"question": "Differentiate between assertion and verification commands.", "answer": "Assertions halt the test upon failure, ensuring critical checks are met. Verifications log failures but allow the test to continue, providing more comprehensive test reports."},
        {"question": "What is behaviour-driven development (BDD)?", "answer": "BDD involves writing tests in a natural language style (Given/When/Then) that stakeholders can understand. Frameworks like Cucumber integrate BDD with automation tools."},
        {"question": "How do you capture screenshots on test failure?", "answer": "Most automation frameworks provide APIs to capture the browser screen when a test fails. In Selenium, you can cast WebDriver to TakesScreenshot and save the image."},
        {"question": "Explain the purpose of Jenkins in automation.", "answer": "Jenkins is an open-source automation server used for building CI/CD pipelines. It schedules and orchestrates tests, builds and deployments."},
        {"question": "What is a test harness?", "answer": "A test harness comprises scripts, test data and configuration needed to execute automated tests. It ensures that tests run under consistent conditions."},
        {"question": "How do you manage test data in automation scripts?", "answer": "Use external data sources, generate randomised data or maintain dedicated test databases. Separating data from logic improves reusability."},
        {"question": "What are page factory annotations?", "answer": "Page factory in Selenium automatically initialises web elements using annotations like @FindBy. It improves readability and reduces boilerplate code."},
        {"question": "What is parallel test execution and why is it beneficial?", "answer": "Parallel execution runs multiple tests simultaneously, reducing overall test time and providing faster feedback. Frameworks like TestNG and PyTest support parallelism."},
        {"question": "Explain how to handle pop-ups and alerts in Selenium.", "answer": "Use the Alert interface to switch to alerts, accept or dismiss them, and send inputs when needed. For window pop-ups, handle multiple window handles."},
        {"question": "What are desired capabilities in Selenium?", "answer": "Desired capabilities are key-value pairs used to configure browser settings for WebDriver, such as browser name, version and platform."},
        {"question": "How do you manage browser cookies in Selenium?", "answer": "WebDriver provides methods to add, delete or retrieve cookies, allowing testers to control session data across tests."},
        {"question": "What is the difference between Assert and Verify in TestNG?", "answer": "Assert stops the test immediately if the assertion fails, while Verify logs the failure but allows subsequent steps to execute."},
        {"question": "Explain how you would design a robust test automation framework.", "answer": "A robust framework uses modular design, POM, data-driven or keyword-driven approaches, logging, reporting, reusable utilities and integrates with CI/CD pipelines."},
        {"question": "What is headless mode and how do you configure it?", "answer": "Headless mode runs browsers without a GUI. In Selenium, you set browser options (e.g., ChromeOptions) to add the --headless argument before instantiating WebDriver."},
        {"question": "How do you perform API testing in automation?", "answer": "Use libraries like RestAssured or requests to send HTTP requests and validate responses. API tests can be integrated into automation frameworks for end-to-end coverage."},
        {"question": "What is mocking and how is it used in testing?", "answer": "Mocking simulates dependencies or services that the system interacts with. It isolates the component under test and allows tests to run in controlled conditions."},
        {"question": "How can you test asynchronous web applications?", "answer": "Use explicit waits to wait for elements or conditions, check callbacks or use frameworks that handle asynchronous operations, such as Protractor for Angular apps."},
        {"question": "Explain continuous testing in DevOps.", "answer": "Continuous testing ensures that automated tests run at every stage of the delivery pipeline, providing rapid feedback on the quality of changes."},
        {"question": "What is the role of a test runner?", "answer": "A test runner executes test scripts, manages test suites and generates reports. Examples include TestNG, JUnit and PyTest."},
        {"question": "How do you manage test flakiness?", "answer": "Identify root causes (timing issues, environment instability), use reliable waits, mock external dependencies and improve test isolation to reduce flakiness."},
        {"question": "What is the difference between BDD and TDD?", "answer": "Test-Driven Development (TDD) writes tests before code focusing on unit tests. Behaviour-Driven Development (BDD) describes behaviour in plain language and fosters collaboration between technical and non-technical stakeholders."},
        {"question": "Explain the use of Docker in test automation.", "answer": "Docker packages applications and their dependencies into containers. In test automation, Docker ensures consistent environments and allows parallel execution across isolated containers."},
        {"question": "How do you integrate test results with reporting tools?", "answer": "Use plugins or libraries that generate HTML or JSON reports (e.g., Allure, ExtentReports). CI tools can publish these reports for stakeholders."},
        {"question": "What is Jenkins pipeline and how does it relate to automation?", "answer": "A Jenkins pipeline defines the stages of a CI/CD workflow as code. It orchestrates building, testing and deploying, integrating automated tests into the pipeline."},
        {"question": "How would you handle authentication in automated tests?", "answer": "Use environment variables or secrets management to store credentials securely. Automate login flows or use tokens/APIs for authentication."},
        {"question": "What is continuous deployment?", "answer": "Continuous deployment automatically releases every change that passes automated tests to production, enabling rapid delivery."},
        {"question": "Explain parameterisation in test automation.", "answer": "Parameterisation separates test logic from data by passing parameters into scripts. It supports data-driven testing and improves reusability."},
        {"question": "What is a hybrid automation framework?", "answer": "A hybrid framework combines features of multiple frameworks (e.g., data-driven, keyword-driven and modular) to leverage their strengths."},
        {"question": "How do you test responsive web design?", "answer": "Use tools like Selenium to simulate different screen resolutions or integrate with services like BrowserStack to test on various devices and browsers."},
        {"question": "What is a grid in Selenium and when would you use it?", "answer": "Selenium Grid allows parallel execution of tests across multiple machines and browsers. It’s useful for cross-browser and high-volume testing."},
        {"question": "Explain how to handle captcha or OTP in automation.", "answer": "Captchas and OTPs are designed to prevent automation. Best practice is to disable them in test environments or use test APIs/hooks to bypass authentication for automated tests."},
        {"question": "What is the role of logging in automation scripts?", "answer": "Logging provides insight into test execution by recording steps, data and errors. Good logging helps diagnose failures and maintain scripts."},
        {"question": "Describe the concept of test reuse.", "answer": "Test reuse involves building modular functions and utilities that can be called from multiple tests, reducing duplication and improving maintainability."},
        {"question": "How would you measure the ROI of automation?", "answer": "Consider factors like reduced execution time, increased coverage, fewer defects in production and maintenance effort. ROI improves when automation replaces repetitive, high-volume manual tests."},
        {"question": "What is a cucumber feature file?", "answer": "In BDD, a feature file contains scenarios written in Gherkin syntax, defining test steps in Given/When/Then format. It links to step definitions implemented in code."},
        {"question": "Explain test isolation and why it matters.", "answer": "Test isolation ensures that tests do not interfere with each other. Each test should set up and tear down its environment to avoid dependencies that cause flakiness."}
    ],
    "Software Developer": [
        {"question": "Explain the four principles of object-oriented programming (OOP).", "answer": "The core OOP principles are encapsulation (bundling data and methods), inheritance (reusing code by deriving classes), polymorphism (treating objects of different classes uniformly) and abstraction (exposing only essential behaviour)."},
        {"question": "Differentiate between a process and a thread.", "answer": "A process is an independent executing program with its own memory space. A thread is a lightweight unit of execution within a process that shares the process’s resources."},
        {"question": "What is a design pattern and why is it useful?", "answer": "Design patterns are reusable solutions to common software design problems. They provide best practices and improve code maintainability and flexibility."},
        {"question": "Explain the SOLID principles.", "answer": "SOLID stands for Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation and Dependency Inversion. These principles promote maintainable and scalable code."},
        {"question": "What is the difference between a stack and a queue?", "answer": "A stack follows Last-In-First-Out (LIFO) semantics where the last element added is removed first. A queue follows First-In-First-Out (FIFO) semantics where elements are removed in the order they were added."},
        {"question": "Describe a binary search algorithm.", "answer": "Binary search finds an element in a sorted list by repeatedly dividing the search interval in half, comparing the target to the middle element and discarding half of the remaining items until the target is found or the interval is empty."},
        {"question": "What is recursion and when would you use it?", "answer": "Recursion is a technique where a function calls itself to solve a problem by breaking it down into smaller subproblems. It’s useful for tasks like traversing trees or solving divide-and-conquer algorithms."},
        {"question": "Explain the concept of Big-O notation.", "answer": "Big-O notation describes the upper bound of an algorithm’s time or space complexity as a function of input size, allowing comparison of algorithm efficiency."},
        {"question": "What is the difference between compiled and interpreted languages?", "answer": "Compiled languages translate source code into machine code before execution, typically yielding faster performance (e.g., C++). Interpreted languages execute code line by line at runtime (e.g., Python), offering flexibility and ease of debugging."},
        {"question": "Describe the Model-View-Controller (MVC) architecture.", "answer": "MVC separates an application into three components: Model (data and business logic), View (user interface) and Controller (handles input and updates model/view). This separation improves maintainability."},
        {"question": "What is a RESTful API?", "answer": "A RESTful API conforms to the REST architectural style, using HTTP methods (GET, POST, PUT, DELETE) to manipulate resources identified by URLs, and returns representations in formats like JSON or XML."},
        {"question": "Explain the difference between synchronous and asynchronous programming.", "answer": "Synchronous programming executes tasks sequentially, blocking execution until each completes. Asynchronous programming allows tasks to run concurrently, improving responsiveness."},
        {"question": "What is memory management and why is it important?", "answer": "Memory management allocates and releases memory during program execution. Efficient management prevents leaks and ensures applications run reliably without exhausting resources."},
        {"question": "Explain the concept of garbage collection.", "answer": "Garbage collection automatically reclaims memory used by objects that are no longer referenced. Languages like Java and Python use garbage collectors to simplify memory management."},
        {"question": "What is multi-threading and what are some challenges associated with it?", "answer": "Multi-threading allows multiple threads within a process to execute concurrently. Challenges include synchronisation, avoiding race conditions and managing shared resources."},
        {"question": "Describe a REST API status code 200 vs 404.", "answer": "HTTP status code 200 indicates a successful request and response. Code 404 means the requested resource was not found on the server."},
        {"question": "What is unit testing and why is it important?", "answer": "Unit testing involves testing individual functions or classes in isolation to ensure they behave as expected. It helps detect bugs early, simplifies debugging and improves code quality."},
        {"question": "Explain dependency injection.", "answer": "Dependency injection is a design pattern where objects receive their dependencies from an external source rather than creating them internally. It improves modularity and testability."},
        {"question": "What is a linked list and how does it differ from an array?", "answer": "A linked list is a linear data structure where each element points to the next. Unlike arrays, linked lists allow efficient insertion and deletion without reallocating memory, but they have slower random access."},
        {"question": "Describe polymorphism with an example.", "answer": "Polymorphism allows objects of different classes to be treated through the same interface. For example, a base class 'Shape' may have a draw() method implemented differently in subclasses like 'Circle' and 'Square'."},
        {"question": "What is a hash table and how does it work?", "answer": "A hash table stores key-value pairs using a hash function to map keys to indices in an array. It offers average constant-time complexity for insertions, deletions and lookups."},
        {"question": "Explain the difference between TCP and UDP.", "answer": "TCP is a connection-oriented protocol that guarantees delivery and order of packets. UDP is connectionless, offering faster transmission without guarantees, suitable for streaming or real-time applications."},
        {"question": "What is a deadlock and how can you prevent it?", "answer": "Deadlock occurs when two or more threads wait indefinitely for resources held by each other. Prevention techniques include avoiding circular waits, using timeouts and acquiring resources in a consistent order."},
        {"question": "Describe the Singleton pattern.", "answer": "The Singleton pattern ensures that a class has only one instance and provides a global access point to it. It’s useful for shared resources like configuration managers."},
        {"question": "What is refactoring?", "answer": "Refactoring is the process of restructuring existing code without changing its external behaviour to improve readability, maintainability and performance."},
        {"question": "Explain continuous integration (CI) and why developers use it.", "answer": "CI is a practice where developers integrate code changes frequently into a shared repository. Automated builds and tests run to detect integration issues early, improving software quality and collaboration."},
        {"question": "What are lambda expressions and where are they used?", "answer": "Lambda expressions are anonymous functions that can be defined inline. They are used in functional programming, such as passing behaviour as arguments to higher-order functions (e.g., map, filter)."},
        {"question": "Describe how exception handling works in your preferred language.", "answer": "Exception handling uses constructs like try/catch (or try/except) to handle runtime errors gracefully. It prevents program crashes and allows recovery or resource cleanup."},
        {"question": "What is a RESTful resource?", "answer": "In REST, a resource is any object or concept that can be addressed by a URI. Clients interact with resources using HTTP methods to perform operations."},
        {"question": "Explain memoisation.", "answer": "Memoisation caches the results of expensive function calls and returns the cached result when the same inputs occur again, improving performance in recursive algorithms."},
        {"question": "What is the difference between composition and inheritance?", "answer": "Inheritance creates a hierarchy where subclasses inherit behaviour from a parent. Composition builds classes from other classes by including them as members, promoting flexibility over rigid hierarchies."},
        {"question": "Describe the Observer pattern.", "answer": "The Observer pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependants are notified and updated automatically."},
        {"question": "What is REST idempotence?", "answer": "An idempotent HTTP method can be called multiple times without changing the result beyond the initial application. For example, PUT is idempotent because updating a resource with the same data yields the same state each time."},
        {"question": "Explain Git branching and merging.", "answer": "Branches allow developers to work on features or fixes in isolation. Merging integrates changes back into the main branch, resolving conflicts when necessary."},
        {"question": "What is a race condition?", "answer": "A race condition occurs when the behaviour of software depends on the timing or sequence of uncontrollable events, leading to unpredictable results in concurrent programs."},
        {"question": "Describe the difference between a shallow copy and a deep copy.", "answer": "A shallow copy duplicates an object’s top-level structure but shares references to nested objects. A deep copy recursively copies all nested objects, creating independent clones."},
        {"question": "What is a RESTful microservice?", "answer": "A microservice is a small, independent service that performs a specific function and communicates with others through lightweight protocols like REST. Microservices architecture allows independent development, deployment and scaling of services."},
        {"question": "Explain caching and its benefits.", "answer": "Caching stores frequently accessed data in a fast storage layer (e.g., memory) to reduce latency and improve performance. It reduces database load and speeds up responses."},
        {"question": "What is SQL injection and how can you prevent it?", "answer": "SQL injection is an attack that manipulates SQL queries through user input to access or modify data. Prevention techniques include using parameterised queries, prepared statements and input validation."},
        {"question": "Describe the differences between agile and waterfall methodologies.", "answer": "The waterfall model is linear and sequential, completing one phase before the next. Agile is iterative and flexible, delivering working increments frequently and incorporating feedback."},
        {"question": "What is asynchronous I/O?", "answer": "Asynchronous I/O allows a program to initiate an I/O operation and continue processing while waiting for completion. It improves responsiveness in applications that perform many I/O operations."},
        {"question": "Explain recursion depth and stack overflow.", "answer": "Recursion depth is the number of times a recursive function calls itself. If it grows too large without termination, the call stack overflows, causing a runtime error."},
        {"question": "What are RESTful best practices for designing APIs?", "answer": "Use meaningful resource names, consistent naming conventions, appropriate HTTP methods, proper status codes, pagination for large results and versioning to manage breaking changes."},
        {"question": "Describe the Factory pattern.", "answer": "The Factory pattern defines an interface for creating objects but lets subclasses decide which class to instantiate. It abstracts object creation, promoting flexibility."},
        {"question": "What is dependency management and why is it important?", "answer": "Dependency management handles external libraries and versions used in a project. Tools like Maven, npm or pip manage installation, upgrades and conflict resolution."},
        {"question": "Explain how hashing is used in data structures.", "answer": "Hashing maps data to a fixed-size value using a hash function. In data structures like hash tables, it provides constant-time insertion and lookup."},
        {"question": "What is a coroutine?", "answer": "Coroutines are functions that can pause and resume their execution, enabling asynchronous programming patterns without blocking threads. They are used in languages like Python and Kotlin."},
        {"question": "Describe the Observer pattern’s use cases.", "answer": "The Observer pattern is used when an object’s change should trigger updates in dependent objects, such as UI frameworks (model–view updates) and event systems."},
        {"question": "What are functional interfaces?", "answer": "Functional interfaces (in languages like Java) have exactly one abstract method, enabling them to be used with lambda expressions. Examples include Runnable and Comparator."},
        {"question": "Explain the Producer–Consumer problem.", "answer": "The Producer–Consumer problem involves coordinating producer threads creating data and consumer threads using it. Solutions use synchronisation constructs like queues and semaphores to avoid overproduction or starvation."},
        {"question": "What is database normalisation?", "answer": "Normalisation organises relational databases to minimise redundancy and dependency by dividing tables and defining relationships. Normal forms (1NF, 2NF, 3NF) guide normalisation."},
        {"question": "Describe the MVC vs MVVM patterns.", "answer": "MVC separates model, view and controller; MVVM replaces the controller with a view model that binds data to the view, facilitating two-way data binding in UI frameworks."},
        {"question": "What is a RESTful endpoint?", "answer": "A RESTful endpoint is a URI that exposes a resource via an API. Clients send HTTP requests to endpoints to perform operations like retrieval, creation or deletion."}
    ],
    "Data Engineer": [
        {"question": "What is ETL and why is it important?", "answer": "ETL stands for Extract, Transform, Load. Data is extracted from source systems, transformed to fit operational needs and loaded into a target system such as a data warehouse."},
        {"question": "Explain the difference between a data warehouse and a database.", "answer": "A database is used for transactional processing and stores current data. A data warehouse aggregates large volumes of historical data for analysis, using schemas like star or snowflake and supporting complex queries."},
        {"question": "What are the advantages of using a star schema?", "answer": "Star schemas organise data into fact tables linked to dimension tables. They simplify queries, improve performance and support efficient aggregation."},
        {"question": "Describe the purpose of a data lake.", "answer": "A data lake is a centralised repository that stores raw, unstructured and structured data at scale. It supports big data analytics and machine learning."},
        {"question": "What is the difference between batch processing and stream processing?", "answer": "Batch processing handles large volumes of data in chunks at scheduled intervals. Stream processing analyses data in real time as it arrives, enabling timely insights."},
        {"question": "Explain the CAP theorem.", "answer": "The CAP theorem states that in a distributed system, only two of the three properties – Consistency, Availability and Partition tolerance – can be achieved simultaneously."},
        {"question": "What is schema on read vs schema on write?", "answer": "Schema on write enforces data structure when data is stored, as in relational databases. Schema on read applies structure when data is read, common in data lakes where flexibility is needed."},
        {"question": "Describe Apache Hadoop and its components.", "answer": "Hadoop is an open-source framework for distributed storage and processing. Its core components include HDFS (storage), MapReduce (processing) and YARN (resource management)."},
        {"question": "What is Apache Spark and how does it differ from Hadoop MapReduce?", "answer": "Spark is a distributed computing engine that processes data in memory for faster performance. Unlike MapReduce, which writes intermediate results to disk, Spark caches data in memory, enabling iterative algorithms and interactive analytics."},
        {"question": "Explain partitioning and bucketing in Hive.", "answer": "Partitioning divides data into separate folders based on column values, reducing scan time. Bucketing divides data into a fixed number of files based on a hash function, improving join performance."},
        {"question": "What is a pipeline in data engineering?", "answer": "A data pipeline automates the movement and transformation of data from sources to destinations. It includes extraction, cleaning, transformation and loading steps."},
        {"question": "Describe the role of orchestration tools like Apache Airflow.", "answer": "Airflow schedules and manages workflows, allowing engineers to define tasks as Directed Acyclic Graphs (DAGs), specify dependencies and monitor execution."},
        {"question": "What are ACID properties?", "answer": "ACID stands for Atomicity, Consistency, Isolation and Durability. These properties ensure reliable transaction processing in relational databases."},
        {"question": "Explain the differences between SQL and NoSQL databases.", "answer": "SQL databases store structured data in tables with fixed schema and support ACID transactions. NoSQL databases store unstructured or semi-structured data, provide flexible schemas and scale horizontally."},
        {"question": "What is data modelling?", "answer": "Data modelling defines how data is structured and related. Conceptual, logical and physical models capture requirements and guide implementation."},
        {"question": "Describe a slowly changing dimension (SCD).", "answer": "An SCD tracks changes to dimension attributes over time. Type 1 overwrites old data, Type 2 creates a new record with effective dates and Type 3 maintains limited history in additional columns."},
        {"question": "What is a deduplication process?", "answer": "Deduplication identifies and removes duplicate records to ensure data quality. Techniques include hashing, sorting and using unique keys."},
        {"question": "Explain data governance.", "answer": "Data governance includes policies, processes and roles for ensuring data quality, security, privacy and compliance. It defines how data is managed across the organisation."},
        {"question": "What are indexes and why are they important?", "answer": "Indexes improve query performance by providing fast access paths to data. They trade off additional storage and maintenance for faster reads."},
        {"question": "Describe a primary key and a foreign key.", "answer": "A primary key uniquely identifies a record in a table. A foreign key references a primary key in another table, creating a relationship between tables."},
        {"question": "What is data lineage?", "answer": "Data lineage traces the origin, movement and transformations of data through systems. It helps verify quality and compliance."},
        {"question": "Explain the difference between OLTP and OLAP systems.", "answer": "OLTP (Online Transaction Processing) systems handle day-to-day transactional workloads with many short queries. OLAP (Online Analytical Processing) systems support complex queries and aggregations for analysis."},
        {"question": "What is a surrogate key?", "answer": "A surrogate key is a synthetic identifier used in data warehouses when natural keys are not stable or unique. It typically has no business meaning."},
        {"question": "Describe partitioning strategies in distributed systems.", "answer": "Partitioning strategies include range partitioning (based on ranges), hash partitioning (based on hash functions) and list partitioning. They distribute data across nodes to balance load and improve performance."},
        {"question": "What is denormalisation and why is it used in data warehouses?", "answer": "Denormalisation introduces redundancy by combining tables. It simplifies queries and improves read performance at the cost of storage and update anomalies."},
        {"question": "Explain the purpose of a message queue.", "answer": "A message queue decouples producers and consumers by allowing producers to post messages to a queue and consumers to read them asynchronously, improving reliability and scalability."},
        {"question": "What is a materialised view?", "answer": "A materialised view stores the results of a query physically, allowing fast access to precomputed summaries. It must be refreshed periodically to reflect source data changes."},
        {"question": "Describe how you would design a data pipeline for real-time analytics.", "answer": "Real-time pipelines capture streaming data (e.g., via Kafka), process it using stream processing engines like Spark Streaming or Flink, and store results in systems optimised for real-time querying, such as Elasticsearch."},
        {"question": "What is idempotent data processing?", "answer": "Idempotent processing ensures that executing the same operation multiple times produces the same result. It prevents duplication or inconsistent state in pipelines."},
        {"question": "Explain the difference between vertical and horizontal scaling.", "answer": "Vertical scaling adds more resources (CPU, RAM) to a single machine. Horizontal scaling adds more machines to distribute load, improving availability and scalability."},
        {"question": "What is Apache Kafka and where is it used?", "answer": "Kafka is a distributed streaming platform that publishes and subscribes to streams of records. It’s used for building real-time pipelines, event sourcing and log aggregation."},
        {"question": "Describe the purpose of a schema registry.", "answer": "A schema registry stores and manages data schemas. It ensures producers and consumers agree on data structure and enables schema evolution with backward compatibility."},
        {"question": "What is data sharding?", "answer": "Sharding splits a large dataset into smaller, independent shards across multiple servers. It improves scalability and performance in distributed databases."},
        {"question": "Explain consistency models in distributed databases.", "answer": "Consistency models (e.g., eventual, strong, causal) define how quickly updates are visible across replicas. They balance performance and data correctness."},
        {"question": "What is a change data capture (CDC)?", "answer": "CDC is a technique for capturing and streaming changes in source data (inserts, updates, deletes) to downstream systems for replication or analytics."},
        {"question": "Describe schema evolution.", "answer": "Schema evolution involves managing changes to data schema over time without breaking existing data or applications. It includes adding, removing or modifying fields while ensuring compatibility."},
        {"question": "What is a Bloom filter and where would you use it?", "answer": "A Bloom filter is a probabilistic data structure that tests whether an element is a member of a set, allowing false positives but no false negatives. It’s used in distributed systems to reduce the cost of lookups."},
        {"question": "Explain the role of metadata in data management.", "answer": "Metadata describes data’s characteristics, such as source, format, owner and usage. It aids discovery, governance and lineage."},
        {"question": "What is a NoSQL column-store database?", "answer": "Column-store databases, such as Cassandra and HBase, store data by columns rather than rows, enabling efficient retrieval of sparse data and high write throughput."},
        {"question": "Describe how to optimise SQL queries for performance.", "answer": "Optimisations include indexing relevant columns, avoiding SELECT *, using joins appropriately, filtering early, analysing query plans and limiting nested queries."},
        {"question": "What is a staging area in ETL?", "answer": "A staging area temporarily stores raw data from source systems before transformations. It isolates the source from the target and allows data quality checks."},
        {"question": "Explain eventual consistency.", "answer": "Eventual consistency ensures that, given time, all replicas in a distributed system will converge to the same state. It sacrifices immediate consistency for availability and scalability."},
        {"question": "What is a dimension table and a fact table?", "answer": "In star schemas, fact tables contain quantitative measures and foreign keys to dimension tables. Dimension tables store descriptive attributes (e.g., customer, time, product)."},
        {"question": "Describe data skew and how to handle it in distributed processing.", "answer": "Data skew occurs when certain partitions contain significantly more data, causing uneven workload distribution. Mitigation strategies include salting keys, tuning partitioning functions and increasing parallelism."},
        {"question": "What is cluster computing?", "answer": "Cluster computing connects multiple servers (nodes) to work together as a single system. It provides scalability and high availability for big data processing."},
        {"question": "Explain the difference between homogeneous and heterogeneous clusters.", "answer": "Homogeneous clusters consist of identical nodes with the same hardware and software. Heterogeneous clusters include different types of nodes, allowing diverse workloads but requiring careful management."},
        {"question": "What is a lakehouse architecture?", "answer": "Lakehouse architecture combines features of data lakes and data warehouses, providing a unified storage system that supports both structured and unstructured data with transactional guarantees."},
        {"question": "Describe how you would implement data quality checks in a pipeline.", "answer": "Data quality checks include validating schema, checking nulls, range or domain constraints, deduplication and outlier detection. These checks can be automated in ETL scripts or tools."},
        {"question": "What is distributed file system replication and why is it important?", "answer": "Replication stores multiple copies of data blocks across nodes. It ensures fault tolerance and data availability if a node fails."},
        {"question": "Explain the purpose of columnar file formats like Parquet or ORC.", "answer": "Parquet and ORC store data by column rather than row, enabling efficient compression and query performance for analytical workloads."},
        {"question": "What are the benefits of using Delta Lake or Apache Hudi?", "answer": "These storage layers bring ACID transactions, versioning and schema enforcement to data lakes, making them suitable for reliable analytics and streaming ingestion."},
        {"question": "Describe the role of batch windows in ETL.", "answer": "Batch windows define the time periods during which batch jobs run. They coordinate extraction and processing schedules to meet SLA requirements."},
        {"question": "What is idempotent and transactional message processing?", "answer": "Idempotent processing ensures duplicate messages do not result in duplicate actions. Transactional processing ensures messages are consumed exactly once, often using features like Kafka transactions."},
        {"question": "Explain how to secure data pipelines.", "answer": "Security measures include encryption at rest and in transit, access controls, authentication and auditing. Tools like Kerberos and TLS protect sensitive data."}
    ],
    "Data Analyst": [
        {"question": "What is the difference between structured and unstructured data?", "answer": "Structured data is organised in fixed schemas (e.g., tables) and easily searchable. Unstructured data lacks a predefined structure, such as text, images or videos."},
        {"question": "Explain the process of data cleaning.", "answer": "Data cleaning involves identifying and correcting inaccuracies, handling missing values, removing duplicates and ensuring consistency to improve data quality."},
        {"question": "What is the purpose of descriptive statistics?", "answer": "Descriptive statistics summarise and describe features of a dataset using measures like mean, median, mode, range, variance and standard deviation."},
        {"question": "Explain the difference between regression and classification.", "answer": "Regression predicts continuous numerical outcomes, while classification predicts categorical labels. Both are supervised learning techniques."},
        {"question": "What is a p-value in hypothesis testing?", "answer": "The p-value quantifies the probability of observing results as extreme as those measured when the null hypothesis is true. A low p-value suggests rejecting the null hypothesis."},
        {"question": "Describe the difference between correlation and causation.", "answer": "Correlation measures the statistical relationship between variables. Causation implies that one variable directly influences another. Correlation does not necessarily imply causation."},
        {"question": "What is a confidence interval?", "answer": "A confidence interval is a range of values likely to contain a population parameter with a specified probability (e.g., 95%). It quantifies uncertainty around an estimate."},
        {"question": "Explain what ANOVA is used for.", "answer": "ANOVA (Analysis of Variance) tests whether there are statistically significant differences between the means of three or more groups."},
        {"question": "What are outliers and how do you handle them?", "answer": "Outliers are data points that deviate significantly from others. They can be handled by removing, transforming or investigating them to determine if they result from error or represent valid variance."},
        {"question": "Describe a histogram and its purpose.", "answer": "A histogram is a graphical representation of the distribution of numerical data. It groups values into bins to show frequency, helping identify patterns and skewness."},
        {"question": "What is a box plot and what does it show?", "answer": "A box plot visualises the distribution of data through quartiles, showing the median, interquartile range and potential outliers."},
        {"question": "Explain SQL joins and list the different types.", "answer": "SQL joins combine rows from two or more tables based on related columns. Types include INNER, LEFT, RIGHT and FULL OUTER joins."},
        {"question": "What is normalisation in databases and why is it used?", "answer": "Normalisation reduces redundancy and dependency by organising fields and tables. It ensures data integrity and efficient storage."},
        {"question": "Describe a time series analysis.", "answer": "Time series analysis studies data points collected over time to identify trends, seasonality and patterns. It is used for forecasting and anomaly detection."},
        {"question": "What is a pivot table?", "answer": "A pivot table is a summarisation tool that aggregates data using rows, columns, values and filters to compute totals, averages or counts."},
        {"question": "Explain the concept of ETL in the context of analytics.", "answer": "ETL (Extract, Transform, Load) prepares data for analysis by extracting it from sources, transforming it into a usable format and loading it into a repository such as a data warehouse."},
        {"question": "What is a KPI and how is it used?", "answer": "A Key Performance Indicator (KPI) is a measurable value that indicates progress toward an objective. KPIs help monitor performance and guide decision making."},
        {"question": "Describe the Central Limit Theorem.", "answer": "The Central Limit Theorem states that the sampling distribution of the mean will approximate a normal distribution as sample size increases, regardless of the population’s distribution."},
        {"question": "What is logistic regression?", "answer": "Logistic regression is a classification algorithm that models the probability of a binary outcome using a logistic function."},
        {"question": "Explain the difference between supervised and unsupervised learning.", "answer": "Supervised learning uses labelled data to train models for prediction. Unsupervised learning finds patterns in unlabeled data, such as clustering and dimensionality reduction."},
        {"question": "What is a hypothesis test?", "answer": "Hypothesis testing is a statistical method used to decide whether there is enough evidence to reject a null hypothesis in favour of an alternative hypothesis."},
        {"question": "Describe the purpose of data visualisation.", "answer": "Data visualisation represents information graphically to reveal patterns, trends and insights that might be missed in tabular data."},
        {"question": "What is a chi-square test?", "answer": "The chi-square test assesses whether observed categorical data significantly differ from expected frequencies under a null hypothesis."},
        {"question": "Explain principal component analysis (PCA).", "answer": "PCA is a dimensionality reduction technique that transforms correlated variables into a smaller number of uncorrelated components capturing most variance."},
        {"question": "What is data normalisation (scaling) and why is it important in machine learning?", "answer": "Scaling transforms numerical features to a common range or distribution. It is important for algorithms sensitive to feature magnitude, such as gradient descent–based models."},
        {"question": "Describe correlation coefficient and its range.", "answer": "The correlation coefficient measures the strength and direction of a linear relationship between two variables. It ranges from –1 (perfect negative) to +1 (perfect positive). A value near zero indicates weak or no linear correlation."},
        {"question": "What is a scatter plot and when is it used?", "answer": "A scatter plot displays data points on a two-dimensional plane to show the relationship between two variables. It is useful for identifying correlation and patterns."},
        {"question": "Explain the difference between population and sample.", "answer": "A population includes all members of a defined group, while a sample is a subset of the population used to make inferences."},
        {"question": "What is sampling bias and how can it affect analyses?", "answer": "Sampling bias occurs when a sample is not representative of the population, leading to skewed results and inaccurate conclusions."},
        {"question": "Describe the process of exploratory data analysis (EDA).", "answer": "EDA involves summarising and visualising the main characteristics of a dataset, often using plots and descriptive statistics to discover patterns, anomalies and relationships."},
        {"question": "What is an outlier detection method in multivariate data?", "answer": "Methods include Mahalanobis distance, isolation forests or clustering to identify points far from expected relationships among variables."},
        {"question": "Explain the concept of the null hypothesis.", "answer": "The null hypothesis states that there is no significant difference or relationship. It provides a baseline for statistical tests."},
        {"question": "What is a confidence level?", "answer": "A confidence level is the probability that a confidence interval contains the true population parameter. Common levels are 90%, 95% and 99%."},
        {"question": "Describe variance and standard deviation.", "answer": "Variance measures the average squared deviation from the mean. Standard deviation is the square root of variance, providing a measure of dispersion in the same units as the data."},
        {"question": "What is a Z-score?", "answer": "A Z-score indicates how many standard deviations a data point is from the mean. It standardises values for comparison across different datasets."},
        {"question": "Explain linear regression.", "answer": "Linear regression models the relationship between a dependent variable and one or more independent variables by fitting a linear equation to observed data."},
        {"question": "Describe the purpose of an R-squared value.", "answer": "R-squared measures the proportion of variance in the dependent variable explained by the independent variables in a regression model. It ranges from 0 to 1, with higher values indicating better fit."},
        {"question": "What is a moving average?", "answer": "A moving average smooths time series data by computing the average of observations over a sliding window, helping identify trends."},
        {"question": "Explain the difference between inner join and outer join.", "answer": "An inner join returns only records with matching keys in both tables. Outer joins (left, right or full) return all records from one or both tables and fill missing matches with nulls."},
        {"question": "Describe hierarchical clustering.", "answer": "Hierarchical clustering builds a tree (dendrogram) of nested clusters by either merging (agglomerative) or splitting (divisive) clusters based on similarity."},
        {"question": "What is feature engineering?", "answer": "Feature engineering creates informative variables from raw data to improve model performance. Techniques include scaling, encoding categorical variables and creating interaction terms."},
        {"question": "Explain the difference between parametric and non-parametric tests.", "answer": "Parametric tests assume underlying distribution parameters (e.g., t-test assumes normality). Non-parametric tests make fewer assumptions and are used when distribution conditions are not met."},
        {"question": "What is cross-validation?", "answer": "Cross-validation evaluates model performance by partitioning data into training and validation sets multiple times, helping mitigate overfitting."},
        {"question": "Describe the concept of sample size determination.", "answer": "Sample size determination calculates the number of observations required to achieve a desired statistical power, considering effect size and significance level."},
        {"question": "What is a bar chart and when would you use it?", "answer": "A bar chart represents categorical data with rectangular bars showing the frequency or value of each category. It is used to compare discrete categories."},
        {"question": "Explain the difference between discrete and continuous variables.", "answer": "Discrete variables take distinct, separate values (e.g., number of items). Continuous variables can take any value within a range (e.g., temperature)."},
        {"question": "What is a Bayesian approach in statistics?", "answer": "Bayesian statistics updates the probability of a hypothesis as more evidence becomes available. It combines prior beliefs with data through Bayes’ theorem."},
        {"question": "Describe the purpose of a dashboard.", "answer": "A dashboard provides a visual overview of key metrics and trends, allowing stakeholders to monitor performance and make data-driven decisions."},
        {"question": "What is an SQL index and how does it improve query performance?", "answer": "An index is a data structure that speeds up data retrieval at the cost of additional storage and slower writes. It allows the database to find records quickly without scanning the entire table."},
        {"question": "Explain the difference between UNION and UNION ALL.", "answer": "UNION combines results from multiple queries and removes duplicates. UNION ALL combines all results including duplicates."},
        {"question": "What is A/B testing in analytics?", "answer": "A/B testing compares two versions of a webpage or feature to determine which performs better based on metrics like conversion rate."},
        {"question": "Describe anomaly detection.", "answer": "Anomaly detection identifies unusual patterns or outliers in data that may indicate errors, fraud or rare events."}
    ],
    "Product Manager": [
        {"question": "What is the product lifecycle and its stages?", "answer": "The product lifecycle includes introduction, growth, maturity and decline stages. Managers adapt strategy and investment at each stage to maximise value."},
        {"question": "Explain the difference between a product vision and a product roadmap.", "answer": "A product vision articulates the long-term goal and purpose of the product. A roadmap is a strategic plan outlining how the vision will be achieved through features and timelines."},
        {"question": "What is an MVP (Minimum Viable Product)?", "answer": "An MVP is the smallest set of features that solves a core problem and allows gathering feedback from real users to validate assumptions and iterate."},
        {"question": "Describe the Kano model.", "answer": "The Kano model categorises product features into must-haves, performance enhancers and delighters, helping prioritise development based on customer satisfaction."},
        {"question": "What is the difference between agile and waterfall methodologies?", "answer": "Waterfall is linear and sequential, whereas Agile is iterative and allows flexibility, continuous feedback and incremental deliveries."},
        {"question": "Explain user story mapping.", "answer": "User story mapping visualises the user journey and organises stories by priority and release. It helps teams understand workflows and plan releases."},
        {"question": "What are OKRs and how do they differ from KPIs?", "answer": "Objectives and Key Results (OKRs) define ambitious goals and measurable outcomes. KPIs monitor performance against ongoing processes. OKRs drive alignment and focus on outcomes."},
        {"question": "Describe a go-to-market (GTM) strategy.", "answer": "A GTM strategy outlines how to introduce a product to the market, including target customers, value proposition, pricing, channels and marketing tactics."},
        {"question": "What is product–market fit?", "answer": "Product–market fit occurs when a product satisfies a strong market demand, evidenced by customer retention, usage and revenue growth."},
        {"question": "Explain the RICE prioritisation framework.", "answer": "RICE stands for Reach, Impact, Confidence and Effort. It scores features based on how many users they affect, the size of impact, confidence in estimates and effort required."},
        {"question": "What is a customer journey map?", "answer": "A customer journey map visualises the steps a customer takes when interacting with a product or service, highlighting pain points and opportunities."},
        {"question": "Describe the difference between qualitative and quantitative user research.", "answer": "Qualitative research explores user motivations and attitudes through interviews or observations. Quantitative research measures behaviours and metrics with surveys or analytics."},
        {"question": "What is a product backlog?", "answer": "A product backlog is an ordered list of features, bug fixes and improvements that the team might deliver. It is continuously refined and prioritised."},
        {"question": "Explain the concept of a value proposition.", "answer": "A value proposition summarises why a customer should use a product, highlighting the benefits and unique differentiation over competitors."},
        {"question": "What is scope creep and how can it be managed?", "answer": "Scope creep refers to uncontrolled expansion of project scope. It is managed by clear requirements, change control processes and regular stakeholder communication."},
        {"question": "Describe the MoSCoW prioritisation technique.", "answer": "MoSCoW categorises requirements into Must-haves, Should-haves, Could-haves and Won’t-haves. It helps manage expectations and focus on critical features."},
        {"question": "What is a business model canvas?", "answer": "The business model canvas is a strategic tool that outlines key aspects of a business, including value proposition, customer segments, channels, revenue streams and cost structure."},
        {"question": "Explain churn rate and its significance.", "answer": "Churn rate measures the percentage of customers who stop using a product over a given period. Low churn indicates customer satisfaction and sustainability."},
        {"question": "What is the difference between revenue and profit?", "answer": "Revenue is the total income generated from sales, while profit is revenue minus costs and expenses."},
        {"question": "Describe how to conduct a competitive analysis.", "answer": "Competitive analysis involves identifying competitors, comparing their products and strategies, evaluating strengths and weaknesses and identifying market opportunities."},
        {"question": "What is a net promoter score (NPS)?", "answer": "NPS measures customer loyalty by asking customers how likely they are to recommend a product. Scores range from –100 to 100, with higher scores indicating strong advocacy."},
        {"question": "Explain the difference between market segmentation and targeting.", "answer": "Market segmentation divides a market into groups based on characteristics. Targeting selects specific segments to focus marketing and product development efforts."},
        {"question": "What is a stakeholder matrix?", "answer": "A stakeholder matrix maps stakeholders based on their influence and interest. It helps prioritise communication and manage expectations."},
        {"question": "Describe a persona and its role in product management.", "answer": "A persona is a fictional representation of a target user based on research. It helps teams empathise with users and design features that meet their needs."},
        {"question": "What is the difference between B2B and B2C products?", "answer": "B2B products serve businesses with longer sales cycles and emphasise ROI, while B2C products serve individual consumers, focusing on ease of use and emotional appeal."},
        {"question": "Explain the Jobs to be Done (JTBD) framework.", "answer": "JTBD focuses on the underlying tasks or ‘jobs’ customers are trying to accomplish. Products succeed by helping customers complete those jobs better than alternatives."},
        {"question": "What is product discovery?", "answer": "Product discovery is the process of testing ideas, understanding user problems and validating assumptions before committing to development."},
        {"question": "Describe a North Star metric.", "answer": "The North Star metric is a single measure that best captures the core value delivered to customers. It guides decision making and aligns the team."},
        {"question": "What is customer lifetime value (CLV)?", "answer": "CLV estimates the total revenue a business can expect from a customer over the entire relationship. It informs marketing spend and retention strategies."},
        {"question": "Explain the difference between inbound and outbound marketing.", "answer": "Inbound marketing attracts customers through content and value, while outbound marketing reaches out directly with advertising and promotional messages."},
        {"question": "What is feature toggling?", "answer": "Feature toggling uses configuration to enable or disable features at runtime. It allows gradual rollouts, A/B testing and quick rollback without redeploying code."},
        {"question": "Describe a SWOT analysis.", "answer": "SWOT stands for Strengths, Weaknesses, Opportunities and Threats. It analyses internal and external factors to guide strategic planning."},
        {"question": "What is a conversion funnel?", "answer": "A conversion funnel visualises the stages users go through from awareness to purchase. It helps identify where users drop off and how to optimise conversion."},
        {"question": "Explain the difference between user stories and tasks.", "answer": "User stories capture requirements from the user’s perspective. Tasks break down user stories into actionable work items for the development team."},
        {"question": "What is a Minimum Lovable Product (MLP)?", "answer": "An MLP goes beyond an MVP by delivering a product that users love. It emphasises user experience and delight while still being minimal."},
        {"question": "Describe the HEART framework.", "answer": "The HEART framework measures user experience through metrics: Happiness, Engagement, Adoption, Retention and Task success."},
        {"question": "What is the role of a product backlog refinement session?", "answer": "Backlog refinement (grooming) sessions review and update the backlog, clarify requirements, estimate effort and prioritise items for upcoming sprints."},
        {"question": "Explain the difference between metrics and analytics.", "answer": "Metrics are quantitative measures (numbers), whereas analytics involves interpreting metrics, identifying patterns and deriving insights for decision making."},
        {"question": "What is a burn-down chart?", "answer": "A burn-down chart tracks remaining work in a sprint over time, illustrating progress and predicting whether the team will complete work by the deadline."},
        {"question": "Describe the difference between a vision and a mission statement.", "answer": "A vision statement defines the desired future state or ultimate goal. A mission statement describes the organisation’s purpose and primary objectives in pursuit of that vision."},
        {"question": "What is roadmap alignment?", "answer": "Roadmap alignment ensures that the product roadmap supports company strategy, stakeholder goals and user needs. It requires regular communication and prioritisation."},
        {"question": "Explain cohort analysis.", "answer": "Cohort analysis groups users based on shared characteristics or start time and analyses behaviour over time, helping identify trends in retention or engagement."},
        {"question": "What is the difference between a pivot and a persevere decision?", "answer": "A pivot means changing aspects of the product strategy based on feedback or data. Persevere means continuing the current strategy because signals indicate it’s working."},
        {"question": "Describe the Value vs Effort matrix.", "answer": "The Value vs Effort matrix plots features by their impact (value) and the work required (effort). It helps prioritise quick wins and decide which features to defer."},
        {"question": "What is a product requirement document (PRD)?", "answer": "A PRD outlines the product’s purpose, features, functionality, user flow and acceptance criteria. It guides the development team in building the right product."},
        {"question": "Explain the concept of the Innovation Adoption Curve.", "answer": "The Innovation Adoption Curve describes how different groups (innovators, early adopters, early majority, late majority, laggards) adopt new technology over time."},
        {"question": "What is a customer advisory board?", "answer": "A customer advisory board consists of selected customers who provide feedback, share needs and help shape the product roadmap."},
        {"question": "What is a product hypothesis and how do you test it?", "answer": "A product hypothesis is an assumption about how a feature or change will impact users. Testing involves defining metrics, creating an experiment (such as an A/B test) and analysing results to validate or refute the hypothesis."},
        {"question": "Explain the difference between demand generation and lead generation.", "answer": "Demand generation focuses on creating awareness and interest in a product, while lead generation captures contact information from potential customers for follow-up. Both are part of the marketing funnel."},
        {"question": "What is a go/no-go decision?", "answer": "A go/no-go decision determines whether a project or product should proceed based on factors like market research, feasibility, resource availability and strategic fit."}
    ],
    "Project Manager": [
        {"question": "What is the triple constraint in project management?", "answer": "The triple constraint refers to scope, time and cost. Changes to one constraint typically affect the others, and project managers must balance them."},
        {"question": "Explain the purpose of a project charter.", "answer": "A project charter formally authorises a project and outlines its objectives, scope, stakeholders and responsibilities. It provides a high-level reference for all participants."},
        {"question": "What is a work breakdown structure (WBS)?", "answer": "A WBS decomposes the project into smaller, manageable components (deliverables and work packages). It helps organise and estimate tasks."},
        {"question": "Describe a Gantt chart.", "answer": "A Gantt chart is a bar chart illustrating a project schedule. It shows tasks, durations, dependencies and progress over time."},
        {"question": "What is risk management in a project?", "answer": "Risk management identifies, assesses and mitigates potential events that may negatively impact project objectives. It includes planning, analysis and response strategies."},
        {"question": "Explain the difference between qualitative and quantitative risk analysis.", "answer": "Qualitative risk analysis prioritises risks based on probability and impact using expert judgement. Quantitative analysis numerically analyses risks to determine potential cost or schedule impacts."},
        {"question": "What is a stakeholder register?", "answer": "A stakeholder register lists individuals or groups affected by the project, their interests, influence and engagement strategies."},
        {"question": "Describe the critical path method (CPM).", "answer": "CPM identifies the longest sequence of dependent tasks and determines the minimum completion time for a project. Delays on critical path tasks delay the project."},
        {"question": "What is scope creep and how can it be controlled?", "answer": "Scope creep is the uncontrolled expansion of project scope without adjusting time, cost or resources. It is controlled through change management processes and clear communication."},
        {"question": "Explain the difference between a milestone and a deliverable.", "answer": "A milestone marks a significant point in the project timeline without a physical output. A deliverable is a tangible or intangible output produced by the project."},
        {"question": "What is resource allocation?", "answer": "Resource allocation assigns available resources (people, equipment, budget) to tasks over time to maximise efficiency and minimise conflicts."},
        {"question": "Describe Agile project management.", "answer": "Agile project management emphasises iterative development, customer collaboration and adaptability. It breaks work into short cycles (sprints) and delivers incremental value."},
        {"question": "What is a sprint retrospective?", "answer": "A sprint retrospective is a meeting at the end of an Agile sprint where the team reflects on what went well, what didn’t and identifies improvements for the next sprint."},
        {"question": "Explain the concept of earned value management (EVM).", "answer": "EVM integrates scope, time and cost to measure project performance. It uses metrics like Planned Value, Earned Value and Actual Cost to assess progress and forecast outcomes."},
        {"question": "What is the difference between a risk and an issue?", "answer": "A risk is a potential event that may impact the project in the future. An issue is a current problem that is affecting the project and needs immediate resolution."},
        {"question": "Describe a change control process.", "answer": "Change control evaluates, approves or rejects changes to project scope, schedule or budget. It ensures that changes are documented and their impacts understood."},
        {"question": "What is the purpose of a communication plan?", "answer": "A communication plan defines how information is distributed among stakeholders, including what to communicate, frequency, methods and responsible parties."},
        {"question": "Explain a RACI matrix.", "answer": "A RACI matrix identifies who is Responsible, Accountable, Consulted and Informed for project tasks. It clarifies roles and responsibilities."},
        {"question": "What is scope baseline?", "answer": "The scope baseline includes the project scope statement, WBS and WBS dictionary. It is used to measure and control project scope."},
        {"question": "Describe schedule baseline.", "answer": "Schedule baseline is the approved project schedule that includes planned start and finish dates for tasks. It is used to track progress and manage changes."},
        {"question": "What is a budget baseline?", "answer": "A budget baseline is the approved time-phased project budget, used to compare actual costs against planned costs."},
        {"question": "Explain fast tracking and crashing as schedule compression techniques.", "answer": "Fast tracking overlaps tasks that were originally planned sequentially. Crashing adds resources to reduce task durations. Both aim to shorten schedule without changing scope."},
        {"question": "What is a lessons learned register?", "answer": "A lessons learned register documents insights gained during the project to improve future projects. It captures successes, failures and recommendations."},
        {"question": "Describe how to conduct stakeholder analysis.", "answer": "Stakeholder analysis identifies stakeholders, assesses their interests, influence and expectations, and determines strategies for engagement and communication."},
        {"question": "What is procurement management?", "answer": "Procurement management involves acquiring goods or services from external sources, including planning, tendering, contract administration and closure."},
        {"question": "Explain the difference between risk mitigation and risk avoidance.", "answer": "Risk mitigation reduces the impact or probability of a risk. Risk avoidance eliminates the risk by changing the plan to remove the threat."},
        {"question": "What is a stakeholder engagement plan?", "answer": "It outlines how to involve stakeholders in the project, detailing communication methods, frequency and responsibilities to maintain support and address concerns."},
        {"question": "Describe project closeout.", "answer": "Project closeout finalises all activities across the project phases, obtains acceptance of deliverables, releases resources, documents lessons learned and closes contracts."},
        {"question": "What is the purpose of project kickoff meeting?", "answer": "A kickoff meeting introduces the project, establishes expectations, clarifies roles and sets the tone for collaboration."},
        {"question": "Explain the PMI talent triangle.", "answer": "The PMI talent triangle highlights core skills for project managers: technical project management, leadership and strategic business management."},
        {"question": "What is the difference between a lead and a lag in scheduling?", "answer": "Lead allows a successor task to start before the predecessor finishes. Lag is a delay between tasks, delaying the start of the successor."},
        {"question": "Describe scope verification.", "answer": "Scope verification confirms that deliverables meet requirements and are formally accepted. It often includes inspections or reviews with stakeholders."},
        {"question": "What is a project management information system (PMIS)?", "answer": "A PMIS is a set of tools and techniques for collecting, integrating and disseminating project information. It supports planning, execution and control."},
        {"question": "Explain the difference between project and operations.", "answer": "A project is temporary with a defined start and end, delivering a unique product or result. Operations are ongoing and repetitive, sustaining the business."},
        {"question": "What is earned schedule?", "answer": "Earned schedule translates schedule performance into time units rather than cost, providing an alternative view of project schedule performance."},
        {"question": "Describe how to build a project team.", "answer": "Building a project team includes defining roles, recruiting members with appropriate skills, fostering cohesion and clarifying responsibilities."},
        {"question": "What is stakeholder salience?", "answer": "Stakeholder salience considers the power, legitimacy and urgency of stakeholders to prioritise engagement and communication."},
        {"question": "Explain the difference between product scope and project scope.", "answer": "Product scope defines features and functions of a product. Project scope defines the work required to deliver the product with specific features."},
        {"question": "What is Monte Carlo simulation in risk analysis?", "answer": "Monte Carlo simulation uses random variables and probability distributions to model uncertainties in project schedules and costs, providing a range of possible outcomes."},
        {"question": "Describe the concept of a responsibility assignment matrix (RAM).", "answer": "A RAM maps project tasks to team members, showing who is responsible, accountable, consulted or informed for each deliverable."},
        {"question": "What is an agile backlog?", "answer": "An agile backlog is a prioritised list of tasks, user stories and defects maintained by the product owner. It serves as the source of work for sprints."},
        {"question": "Explain rolling wave planning.", "answer": "Rolling wave planning progressively elaborates the project plan. Near-term work is planned in detail, while future work is planned at a high level and refined as information becomes available."},
        {"question": "What is integrated change control?", "answer": "Integrated change control evaluates the impact of changes on scope, schedule, cost and quality. It ensures changes are formally approved and documented."},
        {"question": "Describe the concept of float (slack) in a schedule.", "answer": "Float is the amount of time a task can be delayed without affecting the project’s completion. Free float applies to individual tasks, while total float applies to the entire schedule path."},
        {"question": "What is a project roadmap?", "answer": "A project roadmap provides a high-level view of major deliverables and milestones over time, aligning stakeholders on the project’s strategic direction."},
        {"question": "Explain stakeholder engagement assessment matrix.", "answer": "It compares stakeholders’ current and desired engagement levels to plan actions that increase or maintain their support."},
        {"question": "What is resource levelling?", "answer": "Resource levelling adjusts the project schedule to address resource conflicts and over-allocation, often by delaying tasks within their float."},
        {"question": "Describe the process of scope decomposition.", "answer": "Scope decomposition breaks down deliverables into smaller components to define tasks. It creates a hierarchy used to estimate, assign and track work."},
        {"question": "What is stakeholder management?", "answer": "Stakeholder management identifies, analyses and communicates with stakeholders to maintain relationships and ensure their needs are addressed."},
        {"question": "What is a project risk register?", "answer": "A risk register is a document that lists identified risks, their probability and impact assessments, response plans and owners. It tracks risk management throughout the project."}
    ]
}

# Build an interview question dictionary keyed by role and category.  Each entry
# contains both behavioural and technical questions for the role.
interview_questions = {
    role: {"Behavioral": behavioral_questions, "Technical": q_list}
    for role, q_list in technical_questions.items()
}
